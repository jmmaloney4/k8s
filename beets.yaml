apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: beets
  name: beets
spec:
  selector:
    matchLabels:
      app: beets
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: beets
    spec:
      initContainers:
      # - image: minio/mc:latest
      #   name: restore-from-b2
      #   args: ["mirror", "--overwrite", "--debug", "b2/jmmaloney4-music/", "/music/"]
      #   volumeMounts:
      #   - mountPath: /music/
      #     name: beets
      #   - mountPath: /root/.mc/config.json
      #     name: mc-config
      #     subPath: config.json

      # kubectl create secret generic b2-api-key --from-literal=keyID=<keyID> --from-literal=applicationKey="<applicationKey>"
      - image: jmmaloney4/b2:latest
        name: authorize-b2
        env: 
        - name: B2_KEY_ID
          valueFrom:
            secretKeyRef:
              name: b2-api-key
              key: keyID
        - name: B2_APP_KEY
          valueFrom:
            secretKeyRef:
              name: b2-api-key
              key: applicationKey
        volumeMounts:
          - mountPath: /config/
            name: b2
        args: ["authorize-account", "$(B2_KEY_ID)", "$(B2_APP_KEY)"]
      containers:
      - image: linuxserver/beets:latest
        name: beets
        volumeMounts:
          - mountPath: /music/
            name: beets
          - mountPath: /config/
            name: config
          - mountPath: /downloads/
            name: downloads
      - image: minio/mc:latest
        name: download
        command: ["sh", "-c", "while true; do sleep 86400; done"]
        volumeMounts:
        - mountPath: /downloads/
          name: downloads
        - mountPath: /root/.mc/config.json
          name: mc-config
          subPath: config.json
      - image: minio/mc:latest
        name: sync
        args: ["mirror", "--watch", "--overwrite", "/music/", "minio/music/"]
        volumeMounts:
        - mountPath: /music/
          name: beets
          readOnly: false
        - mountPath: /root/.mc/config.json
          name: mc-config
          subPath: config.json
        - mountPath: /b2/
          name: b2
      - image: minio/mc:latest
        name: debug
        command: ["sh", "-c", "while true; do sleep 86400; done"]
        volumeMounts:
        - mountPath: /music/
          name: beets
        - mountPath: /root/.mc/config.json
          name: mc-config
          subPath: config.json
      - image: jmmaloney4/b2:latest
        name: b2
        command: ["sh", "-c", "while true; do sleep 86400; done"]
        volumeMounts:
          - mountPath: /config/
            name: b2
      volumes:
        - name: beets
          persistentVolumeClaim:
            claimName: beets-pvc
        - name: config
          configMap:
            name: beets-config
        - name: mc-config
          configMap:
            name: beets-mc-config
        - name: downloads
          emptyDir: {}
        - name: b2
          persistentVolumeClaim:
            claimName: b2-config
      
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: beets-pvc
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 150Gi
  storageClassName: rook-ceph-block

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: b2-config
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 300Gi
  storageClassName: rook-cephfs

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: beets-mc-config
  labels:
    app: beets
data:
  config.json: |
    {
      "version": "10",
      "aliases": {
        "minio": {
          "url": "http://minio.minio.svc.cluster.local",
          "accessKey": "admin",
          "secretKey": "X4Nid8EDsAsDj3G4mivUKcu2Zue4ueRV6usc6nzC",
          "api": "s3v4",
          "path": "auto"
        },
        "b2": {
          "url": "https://s3.us-west-002.backblazeb2.com",
          "accessKey": "002c0e53057bd940000000009",
          "secretKey": "K002pDghCa/00jPMQlGCHzj+eyL1RP4",
          "api": "s3v4",
          "path": "auto"
        }
      }
    }


---

apiVersion: v1
kind: ConfigMap
metadata:
  name: beets-config
  labels:
    app: beets
data:
  config.yaml: |
    plugins: fetchart scrub chroma web missing info export
    directory: /music
    library: /music/library.db
    art_filename: albumart
    threaded: yes
    original_date: no
    per_disc_numbering: no
        
    paths:
        default: $albumartist/$album [$media, $format, $bitdepth-$samplerate] ($mb_albumid)/Disk $disc/$track $title ($length)
        singleton: $albumartist/$album [$media, $format, $bitdepth-$samplerate] ($mb_albumid)/$track $title ($length)
        comp: Compilations/$album [$media, $format, $bitdepth-$samplerate] ($mb_albumid)/Disk $disc/$track $title ($length)
    
    import:
        write: yes
        copy: no
        move: yes
        resume: ask
        incremental: yes
        quiet_fallback: skip
        timid: yes
        log: /music/beet.log

    fetchart:
        auto: yes

    scrub:
        auto: yes

    replace:
        '^\.': _
        '[\x00-\x1f]': _
        '[<>:"\?\*\|]': _
        '[\xE8-\xEB]': e
        '[\xEC-\xEF]': i
        '[\xE2-\xE6]': a
        '[\xF2-\xF6]': o
        '[\xF8]': o
        '\.$': _
        '\s+$': ''

    web:
        host: 0.0.0.0
        port: 8337
